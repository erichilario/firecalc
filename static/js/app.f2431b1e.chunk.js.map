{"version":3,"sources":["assets/ehilario.jpg","assets/linechart.jpg","assets/barchart.jpg","components/context.js","screens/DrawerContent.js","screens/SplashScreen.js","model/users.js","screens/SignInScreen.js","screens/SignUpScreen.js","screens/HomeScreen.js","screens/SettingsScreen.js","screens/HelpScreen.js","screens/AboutScreen.js","screens/ContactScreen.js","screens/ScenarioScreen.js","screens/AdvScenarioScreen.js","screens/RootStackScreen.js","App.js","assets/favicon.png"],"names":["module","exports","AuthContext","React","createContext","DrawerContent","props","signOut","useContext","View","style","flex","DrawerContentScrollView","styles","drawerContent","userInfoSection","flexDirection","marginTop","marginLeft","alignItems","Image","source","myAvatar","size","Title","title","Caption","caption","Section","drawerSection","DrawerItem","icon","color","name","label","onPress","navigation","navigate","bottomDrawerSection","StyleSheet","create","paddingLeft","fontSize","fontWeight","lineHeight","row","section","marginRight","paragraph","marginBottom","borderTopColor","borderTopWidth","preference","justifyContent","paddingVertical","paddingHorizontal","SplashScreen","colors","useTheme","useState","container","backgroundColor","barStyle","header","animation","duraton","require","logo","resizeMode","Text","text","textAlign","footer","background","ScrollView","button","LinearGradient","signIn","textSign","MaterialIcons","height_logo","Dimensions","get","height","borderTopLeftRadius","borderTopRightRadius","width","innerText","borderRadius","Users","id","email","username","password","userToken","SignInScreen","check_textInputChange","secureTextEntry","isValidUser","isValidPassword","data","setData","text_header","text_footer","action","FontAwesome","TextInput","placeholder","textInput","autoCapitalize","onChangeText","val","trim","length","textInputChange","onEndEditing","evt","console","log","nativeEvent","Feather","duration","errorMsg","handlePasswordChange","userName","foundUser","filter","item","alert","logMeIn","borderColor","borderWidth","paddingBottom","borderBottomWidth","borderBottomColor","actionError","Platform","OS","SignUpScreen","confirm_password","confirm_secureTextEntry","handleConfirmPasswordChange","HomeScreen","SettingsScreen","count","setCount","Button","HelpScreen","AboutScreen","ContactScreen","ScenarioScreen","currentAge","retirementAge","inputTab","relationshipStatus","currentSavings","annualDeposit","interestRate","yearsAfterRetirement","desiredRetirementIncome","futureValueTwo","onTrack","annualRetirementIncome","annualRetIncNum","yearsData","getYearsUntilRetirement","Date","getFullYear","current_age","labels","Array","from","map","_","i","parseInt","futureValue","annual_deposit","interest_rate","current_savings","int","years_data","years_until_retirement","future_value","reduce","sum","last_year_plus_annual_deposit","new_sum","push","toAud","number","toLocaleString","currency","padding","inputResult","paddingRight","value","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onSlidingComplete","Math","round","years_after_retirement","desired_retirement_income","annual_retirement_income","on_track","calculate","chartStyle","horizontal","showsHorizontalScrollIndicator","datasets","yAxisLabel","yAxisInterval","hidePointsAtIndex","v","k","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","propsForDots","r","strokeWidth","stroke","bezier","marginVertical","info","success","danger","buttonView","flexWrap","margin","AdvScenarioScreen","collapseIsOpen","collapseDetailsIsOpen","ageStopSaving","expensesPostRetirement","yearlySalary","savingsRate","annualCol","lifestyleCreep","superBalance","superGrowth","superWithdrawalRate","ageExtraToSuper","percentExtraToSuper","pporCurrentValue","pporCurrentOwing","pporInterestRate","pporAnnualRepayments","currentETFLICValue","safeWithdrawalRate","paGrowthETFLIC","ipCurrentValue","ipCurrentOwing","ipInterestRate","ipAnnualRepayments","ipYieldPA","ipExpenses","propertyGrowth","windfall1Year","windfall1Amount","windfall2Year","windfall2Amount","passiveIncomeStartYear","passiveIncomeEndYear","passiveIncomeNetPA","tempExpenseStartYear","tempExpenseEndYear","tempExpenseCostPA","advfutureValueTwo","advannualRetirementIncome","collapseButton","trigger","open","lineChartA","barChartA","RootStack","createStackNavigator","HomeStack","SettingsStack","HelpStack","AboutStack","ContactStack","ScenarioStack","AdvScenarioStack","RootStackScreen","Navigator","headerMode","Screen","component","HomeStackScreen","screenOptions","headerStyle","headerTintColor","headerTitleStyle","options","headerLeft","openDrawer","SettingsStackScreen","HelpStackScreen","AboutStackScreen","ContactStackScreen","ScenarioStackScreen","AdvScenarioStackScreen","Drawer","createDrawerNavigator","App","useReducer","prevState","type","token","isLoading","loginState","dispatch","authContext","useMemo","a","async","String","AsyncStorage","setItem","removeItem","signUp","useEffect","setTimeout","getItem","ActivityIndicator","Provider","NavigationContainer"],"mappings":"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","file":"static/js/app.f2431b1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ehilario.d468c577.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linechart.893ede55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/barchart.a3e33dca.jpg\";","// =============================\r\n// context.js\r\n// =============================\r\nimport React from \"react\";\r\n\r\nexport const AuthContext = React.createContext();\r\n","// =============================\r\n// DrawerContent.js\r\n// =============================\r\nimport React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport {\r\n  Avatar,\r\n  Title,\r\n  Caption,\r\n  Paragraph,\r\n  Drawer,\r\n  Text,\r\n  TouchableRipple,\r\n  Switch,\r\n} from \"react-native-paper\";\r\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport myAvatar from \"../assets/ehilario.jpg\";\r\nimport { AuthContext } from \"../components/context\";\r\nimport IonIcon from \"react-native-vector-icons/Ionicons\";\r\n\r\nexport function DrawerContent(props) {\r\n  const { signOut } = React.useContext(AuthContext);\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <DrawerContentScrollView {...props}>\r\n        <View style={styles.drawerContent}>\r\n          <View style={styles.userInfoSection}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"column\",\r\n                marginTop: 20,\r\n                marginLeft: -20,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Avatar.Image source={myAvatar} size={150} />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"column\",\r\n                marginLeft: -20,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Title style={styles.title}>Eric Hilario</Title>\r\n              <Caption style={styles.caption}>@ehilario</Caption>\r\n            </View>\r\n            <Drawer.Section style={styles.drawerSection}>\r\n              <DrawerItem\r\n                icon={({ color, size }) => (\r\n                  <Icon name=\"home-outline\" color={color} size={size} />\r\n                )}\r\n                label=\"Home\"\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Home\");\r\n                }}\r\n              />\r\n              <DrawerItem\r\n                icon={({ color, size }) => (\r\n                  <Icon name=\"settings-outline\" color={color} size={size} />\r\n                )}\r\n                label=\"Settings\"\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Settings\");\r\n                }}\r\n              />\r\n              <DrawerItem\r\n                icon={({ color, size }) => (\r\n                  <Icon name=\"help-circle-outline\" color={color} size={size} />\r\n                )}\r\n                label=\"Help\"\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Help\");\r\n                }}\r\n              />\r\n              <DrawerItem\r\n                icon={({ color, size }) => (\r\n                  <Icon name=\"information-outline\" color={color} size={size} />\r\n                )}\r\n                label=\"About\"\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"About\");\r\n                }}\r\n              />\r\n              <DrawerItem\r\n                icon={({ color, size }) => (\r\n                  <Icon name=\"phone\" color={color} size={size} />\r\n                )}\r\n                label=\"Contact\"\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Contact\");\r\n                }}\r\n              />\r\n            </Drawer.Section>\r\n          </View>\r\n        </View>\r\n      </DrawerContentScrollView>\r\n      <Drawer.Section style={styles.bottomDrawerSection}>\r\n        <DrawerItem\r\n          icon={({ color, size }) => (\r\n            <Icon name=\"exit-to-app\" color={color} size={size} />\r\n          )}\r\n          label=\"Sign Out\"\r\n          onPress={() => {\r\n            signOut();\r\n          }}\r\n        />\r\n      </Drawer.Section>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  drawerContent: {\r\n    flex: 1,\r\n  },\r\n  userInfoSection: {\r\n    paddingLeft: 20,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    marginTop: 3,\r\n    fontWeight: \"bold\",\r\n  },\r\n  caption: {\r\n    fontSize: 14,\r\n    lineHeight: 14,\r\n  },\r\n  row: {\r\n    marginTop: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  section: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginRight: 15,\r\n  },\r\n  paragraph: {\r\n    fontWeight: \"bold\",\r\n    marginRight: 3,\r\n  },\r\n  drawerSection: {\r\n    marginTop: 15,\r\n  },\r\n  bottomDrawerSection: {\r\n    marginBottom: 15,\r\n    borderTopColor: \"#f4f4f4\",\r\n    borderTopWidth: 1,\r\n  },\r\n  preference: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  FlatList,\r\n  Linking,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Button,\r\n  Modal,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\n\r\nconst termsConds =\r\n  \"• This is a model and not a prediction. The results are based cased on the limited information that you have provided \" +\r\n  \"and assumptions made about the future. \\n• The amounts projected are estimates only and are not guaranteed. \\n\" +\r\n  \"• Do not rely solely on this calculator to make decisions about your retirement. \\n\" +\r\n  \"• There may be other factors to take into account. Consider your own needs, financial situation \" +\r\n  \"and investment objectives. \\n• You may wish to get advice from a licensed financial adviser. \";\r\n\r\nconst SplashScreen = ({ navigation }) => {\r\n  const { colors } = useTheme();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"#f57576\" barStyle=\"light-content\" />\r\n      <View style={styles.header}>\r\n        <Animatable.Image\r\n          animation=\"bounceIn\"\r\n          duraton=\"1500\"\r\n          source={require(\"../assets/favicon.png\")}\r\n          style={styles.logo}\r\n          resizeMode=\"stretch\"\r\n        />\r\n        <Text\r\n          style={[\r\n            styles.title,\r\n            {\r\n              color: colors.text,\r\n            },\r\n          ]}\r\n        >\r\n          FIRE Calculator\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: 15,\r\n            marginTop: -20,\r\n            textAlign: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {\"\\n\"}FINANCIAL INDEPENDENCE{\"\\n\"}RETIRE EARLY\r\n        </Text>\r\n      </View>\r\n      <Animatable.View\r\n        style={[\r\n          styles.footer,\r\n          {\r\n            backgroundColor: colors.background,\r\n          },\r\n        ]}\r\n        animation=\"fadeInUpBig\"\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: 15,\r\n            color: colors.text,\r\n            textAlign: \"center\",\r\n            marginTop: -20,\r\n          }}\r\n        >\r\n          By clicking continue, you accept the following Terms and Conditions:\r\n        </Text>\r\n        <ScrollView>\r\n          <Text style={styles.text}>{termsConds}</Text>\r\n        </ScrollView>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"SignInScreen\")}>\r\n          <View style={styles.button}>\r\n            <LinearGradient\r\n              colors={[\"#f57576\", \"#a23425\"]}\r\n              style={styles.signIn}\r\n            >\r\n              <Text style={styles.textSign}>Continue</Text>\r\n              <MaterialIcons name=\"navigate-next\" color=\"#fff\" size={20} />\r\n            </LinearGradient>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </Animatable.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n\r\nconst { height } = Dimensions.get(\"screen\");\r\nconst height_logo = height * 0.28;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  header: {\r\n    flex: 2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingVertical: 50,\r\n    paddingHorizontal: 30,\r\n  },\r\n  logo: {\r\n    width: height_logo,\r\n    height: height_logo,\r\n  },\r\n  title: {\r\n    color: \"#05375a\",\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n  },\r\n  text: {\r\n    fontSize: 10,\r\n    color: \"grey\",\r\n    marginTop: 5,\r\n  },\r\n  innerText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  signIn: {\r\n    width: 150,\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n    flexDirection: \"row\",\r\n  },\r\n  textSign: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// =============================\r\n// model/users.js\r\n// =============================\r\nconst Users = [\r\n  {\r\n    id: 1,\r\n    email: \"user1@email.com\",\r\n    username: \"ehilario\",\r\n    password: \"password\",\r\n    userToken: \"token123\",\r\n  },\r\n  {\r\n    id: 2,\r\n    email: \"user2@email.com\",\r\n    username: \"kmasters\",\r\n    password: \"password\",\r\n    userToken: \"token12345\",\r\n  },\r\n  {\r\n    id: 3,\r\n    email: \"testuser@email.com\",\r\n    username: \"user1\",\r\n    password: \"password\",\r\n    userToken: \"testtoken\",\r\n  },\r\n];\r\nexport default Users;\r\n","// =============================\r\n// SignInScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  TextInput,\r\n  Platform,\r\n  StyleSheet,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\nimport Feather from \"react-native-vector-icons/Feather\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"../components/context\";\r\nimport Users from \"../model/users\";\r\n\r\nconst SignInScreen = ({ navigation }) => {\r\n  const { colors } = useTheme();\r\n  const [data, setData] = React.useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    check_textInputChange: false,\r\n    secureTextEntry: true,\r\n    isValidUser: true,\r\n    isValidPassword: true,\r\n  });\r\n\r\n  const { signIn } = React.useContext(AuthContext);\r\n\r\n  const textInputChange = (val) => {\r\n    if (val.trim().length >= 4) {\r\n      setData({\r\n        ...data,\r\n        username: val,\r\n        check_textInputChange: true,\r\n        isValidUser: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        username: val,\r\n        check_textInputChange: false,\r\n        isValidUser: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (val) => {\r\n    if (val.trim().length >= 8) {\r\n      setData({\r\n        ...data,\r\n        password: val,\r\n        isValidPassword: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        password: val,\r\n        isValidPassword: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateSecureTextEntry = () => {\r\n    setData({\r\n      ...data,\r\n      secureTextEntry: !data.secureTextEntry,\r\n    });\r\n  };\r\n\r\n  const handleValidUser = (val) => {\r\n    if (val.length > 3) {\r\n      console.log(val);\r\n      setData({\r\n        ...data,\r\n        isValidUser: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidUser: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  function logMeIn(userName, password) {\r\n    const foundUser = Users.filter((item) => {\r\n      return userName == item.username && password == item.password;\r\n    });\r\n\r\n    if (data.username.length == 0 || data.password.length == 0) {\r\n      alert(\"Username or password cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (foundUser.length == 0) {\r\n      alert(\"Username or password is incorrect.\");\r\n      // Alert.alert(\"Invalid user!\", \"Username or password is incorrect.\", [\r\n      //   { text: \"Okay\" },\r\n      // ]);\r\n      return;\r\n    }\r\n    signIn(foundUser);\r\n    //location.reload();\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"#f57576\" barStyle=\"light-content\" />\r\n      <View style={styles.header}>\r\n        <Text style={styles.text_header}>Login</Text>\r\n        {/* <Text>user1 password</Text> */}\r\n      </View>\r\n      <Animatable.View\r\n        style={[\r\n          styles.footer,\r\n          {\r\n            backgroundColor: colors.background,\r\n          },\r\n        ]}\r\n        animation=\"fadeInUpBig\"\r\n      >\r\n        <Text style={styles.text_footer}>Username</Text>\r\n        <View style={styles.action}>\r\n          <FontAwesome\r\n            style={{ marginRight: 10 }}\r\n            name=\"user-o\"\r\n            color=\"#05375a\"\r\n            size={20}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Username\"\r\n            style={styles.textInput}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(val) => textInputChange(val)}\r\n            // onEndEditing={(evt) => handleValidUser(evt.nativeEvent.text)} // not firing\r\n            onEndEditing={(evt) => console.log(evt.nativeEvent.text)} // also not firing?\r\n          />\r\n          {data.check_textInputChange ? (\r\n            <Animatable.View animation=\"bounceIn\">\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"check-circle\"\r\n                color=\"green\"\r\n                size={20}\r\n              />\r\n            </Animatable.View>\r\n          ) : null}\r\n        </View>\r\n        {data.isValidUser ? null : (\r\n          <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n            <Text style={styles.errorMsg}>\r\n              Username must be 4 characters long.\r\n            </Text>\r\n          </Animatable.View>\r\n        )}\r\n\r\n        <Text style={[styles.text_footer, { marginTop: 35 }]}>Password</Text>\r\n        <View style={styles.action}>\r\n          <Feather\r\n            style={{ marginRight: 10 }}\r\n            name=\"lock\"\r\n            color=\"#05375a\"\r\n            size={20}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            secureTextEntry={data.secureTextEntry ? true : false}\r\n            style={styles.textInput}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(val) => handlePasswordChange(val)}\r\n          />\r\n          <TouchableOpacity onPress={updateSecureTextEntry}>\r\n            {data.secureTextEntry ? (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye-off\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            ) : (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n        {data.isValidPassword ? null : (\r\n          <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n            <Text style={styles.errorMsg}>\r\n              Password must be 8 or more characters long.\r\n            </Text>\r\n          </Animatable.View>\r\n        )}\r\n\r\n        <TouchableOpacity>\r\n          <Text style={{ color: \"#999999\", marginTop: 10, marginBottom: 20 }}>\r\n            Forgot password?\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {/* <View style={styles.button}> */}\r\n        <TouchableOpacity\r\n          style={styles.signIn}\r\n          onPress={() => {\r\n            //loginHandle(data.username, data.password);\r\n            logMeIn(data.username, data.password);\r\n          }}\r\n        >\r\n          <LinearGradient colors={[\"#f57576\", \"#a23425\"]} style={styles.signIn}>\r\n            {/* <TouchableOpacity onPress={() => navigation.navigate(\"Home\")}> */}\r\n\r\n            <Text style={[styles.textSign, { color: \"#fff\" }]}> Sign In</Text>\r\n          </LinearGradient>\r\n        </TouchableOpacity>\r\n        {/* </View> */}\r\n\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"SignUpScreen\")}\r\n          style={[\r\n            styles.signIn,\r\n            {\r\n              borderColor: \"#f57576\",\r\n              borderWidth: 1,\r\n              marginTop: 15,\r\n            },\r\n          ]}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.textSign,\r\n              {\r\n                color: \"#f57576\",\r\n              },\r\n            ]}\r\n          >\r\n            Sign Up\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </Animatable.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 50,\r\n    //textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flex: 3,\r\n    backgroundColor: \"#fff\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 30,\r\n  },\r\n  text_header: {\r\n    color: \"#000\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 50,\r\n  },\r\n  text_footer: {\r\n    color: \"#05375a\",\r\n    fontSize: 18,\r\n  },\r\n  action: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#f2f2f2\",\r\n    paddingBottom: 5,\r\n  },\r\n  actionError: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#FF0000\",\r\n    paddingBottom: 5,\r\n  },\r\n  textInput: {\r\n    flex: 1,\r\n    marginTop: Platform.OS === \"ios\" ? 0 : -12,\r\n    paddingLeft: 20,\r\n    color: \"#05375a\",\r\n  },\r\n  errorMsg: {\r\n    color: \"#FF0000\",\r\n    fontSize: 14,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n  },\r\n  textSign: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// =============================\r\n// SignUpScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  TextInput,\r\n  Platform,\r\n  StyleSheet,\r\n  StatusBar,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\nimport Feather from \"react-native-vector-icons/Feather\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { useTheme } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"../components/context\";\r\n\r\nconst SignUpScreen = ({ navigation }) => {\r\n  const { colors } = useTheme();\r\n  const [data, setData] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    check_textInputChange: false,\r\n    secureTextEntry: true,\r\n    confirm_secureTextEntry: true,\r\n  });\r\n\r\n  const textInputChange = (val) => {\r\n    if (val.length != 0) {\r\n      setData({\r\n        ...data,\r\n        email: val,\r\n        check_textInputChange: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        email: val,\r\n        check_textInputChange: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (val) => {\r\n    setData({\r\n      ...data,\r\n      password: val,\r\n    });\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (val) => {\r\n    setData({\r\n      ...data,\r\n      confirm_password: val,\r\n    });\r\n  };\r\n\r\n  const updateSecureTextEntry = () => {\r\n    setData({\r\n      ...data,\r\n      secureTextEntry: !data.secureTextEntry,\r\n    });\r\n  };\r\n\r\n  const updateConfirmSecureTextEntry = () => {\r\n    setData({\r\n      ...data,\r\n      confirm_secureTextEntry: !data.confirm_secureTextEntry,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"#f57576\" barStyle=\"light-content\" />\r\n      <View style={styles.header}>\r\n        <Text style={styles.text_header}>Sign Up</Text>\r\n      </View>\r\n      <Animatable.View\r\n        style={[\r\n          styles.footer,\r\n          {\r\n            backgroundColor: colors.background,\r\n          },\r\n        ]}\r\n        animation=\"fadeInUpBig\"\r\n      >\r\n        <Text style={styles.text_footer}>Email</Text>\r\n        <View style={styles.action}>\r\n          <FontAwesome\r\n            style={{ marginRight: 10 }}\r\n            name=\"user-o\"\r\n            color=\"#05375a\"\r\n            size={20}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Email address\"\r\n            style={styles.textInput}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(val) => textInputChange(val)}\r\n          />\r\n          {data.check_textInputChange ? (\r\n            <Animatable.View animation=\"bounceIn\">\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"check-circle\"\r\n                color=\"green\"\r\n                size={20}\r\n              />\r\n            </Animatable.View>\r\n          ) : null}\r\n        </View>\r\n\r\n        <Text style={[styles.text_footer, { marginTop: 35 }]}>Password</Text>\r\n        <View style={styles.action}>\r\n          <Feather\r\n            style={{ marginRight: 10 }}\r\n            name=\"lock\"\r\n            color=\"#05375a\"\r\n            size={20}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            secureTextEntry={data.secureTextEntry ? true : false}\r\n            style={styles.textInput}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(val) => handlePasswordChange(val)}\r\n          />\r\n          <TouchableOpacity onPress={updateSecureTextEntry}>\r\n            {data.secureTextEntry ? (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye-off\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            ) : (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <Text style={[styles.text_footer, { marginTop: 35 }]}>\r\n          Confirm Password\r\n        </Text>\r\n        <View style={styles.action}>\r\n          <Feather\r\n            style={{ marginRight: 10 }}\r\n            name=\"lock\"\r\n            color=\"#05375a\"\r\n            size={20}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Confirm your Password\"\r\n            secureTextEntry={data.confirm_secureTextEntry ? true : false}\r\n            style={styles.textInput}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(val) => handleConfirmPasswordChange(val)}\r\n          />\r\n          <TouchableOpacity onPress={updateConfirmSecureTextEntry}>\r\n            {data.secureTextEntry ? (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye-off\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            ) : (\r\n              <Feather\r\n                style={{ marginLeft: 10 }}\r\n                name=\"eye\"\r\n                color=\"grey\"\r\n                size={20}\r\n              />\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={styles.button}>\r\n          <LinearGradient colors={[\"#f57576\", \"#a23425\"]} style={styles.signIn}>\r\n            <TouchableOpacity onPress={() => navigation.navigate(\"Home\")}>\r\n              <Text style={[styles.textSign, { color: \"#fff\" }]}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n          </LinearGradient>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"SignInScreen\")}\r\n          style={[\r\n            styles.signIn,\r\n            {\r\n              borderColor: \"#f57576\",\r\n              borderWidth: 1,\r\n              marginTop: 15,\r\n            },\r\n          ]}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.textSign,\r\n              {\r\n                color: \"#f57576\",\r\n              },\r\n            ]}\r\n          >\r\n            Sign In\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </Animatable.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 50,\r\n  },\r\n  footer: {\r\n    flex: 3,\r\n    backgroundColor: \"#fff\",\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 30,\r\n  },\r\n  text_header: {\r\n    color: \"#000\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 50,\r\n  },\r\n  text_footer: {\r\n    color: \"#05375a\",\r\n    fontSize: 18,\r\n  },\r\n  action: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#f2f2f2\",\r\n    paddingBottom: 5,\r\n  },\r\n  actionError: {\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#FF0000\",\r\n    paddingBottom: 5,\r\n  },\r\n  textInput: {\r\n    flex: 1,\r\n    marginTop: Platform.OS === \"ios\" ? 0 : -12,\r\n    paddingLeft: 20,\r\n    color: \"#05375a\",\r\n  },\r\n  errorMsg: {\r\n    color: \"#FF0000\",\r\n    fontSize: 14,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n  },\r\n  textSign: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// =============================\r\n// HomeScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={styles.signIn}\r\n        onPress={() => {\r\n          navigation.navigate(\"Scenario\");\r\n        }}\r\n      >\r\n        <LinearGradient colors={[\"#f57576\", \"#a23425\"]} style={styles.signIn}>\r\n          <Text style={[styles.textSign, { color: \"#fff\" }]}>\r\n            Basic Scenario\r\n          </Text>\r\n        </LinearGradient>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.signIn}\r\n        onPress={() => {\r\n          navigation.navigate(\"Advanced Scenario\");\r\n        }}\r\n      >\r\n        <LinearGradient colors={[\"#f57576\", \"#a23425\"]} style={styles.signIn}>\r\n          <Text style={[styles.textSign, { color: \"#fff\" }]}>\r\n            Advanced Scenario\r\n          </Text>\r\n        </LinearGradient>\r\n      </TouchableOpacity>\r\n      {/* <Button\r\n        title=\"Go to Settings\"\r\n        onPress={() => navigation.navigate(\"Settings\")}\r\n      />\r\n      <Text>Scenario</Text>\r\n      <Button title=\"New\" onPress={() => navigation.navigate(\"Scenario\")} /> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n    marginTop: 20,\r\n  },\r\n  textSign: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","// import { setStatusBarNetworkActivityIndicatorVisible } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\n\r\nconst SettingsScreen = ({ navigation }) => {\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Settings Screen</Text>\r\n      {count % 3 == 0 && count != 0 ? (\r\n        <Button title=\"bang\" onPress={() => setCount(count + 1)} />\r\n      ) : (\r\n        <Button title=\"click me\" onPress={() => setCount(count + 1)} />\r\n      )}\r\n      <Text>{count}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\n\r\nconst HelpScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Help Screen</Text>\r\n      <Button title=\"Click here\" onPress={() => alert(\"Button clicked!\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HelpScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\n\r\nconst AboutScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>About Screen</Text>\r\n      <Button title=\"Click here\" onPress={() => alert(\"Button clicked!\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AboutScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\n\r\nconst ContactScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Contact Screen</Text>\r\n      <Button title=\"Click here\" onPress={() => alert(\"Button clicked!\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ContactScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","// =============================\r\n// ScenarioScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PieChart,\r\n  ProgressChart,\r\n  ContributionGraph,\r\n  StackedBarChart,\r\n} from \"react-native-chart-kit\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nconst ScenarioScreen = ({ navigation }) => {\r\n  const [data, setData] = React.useState({\r\n    currentAge: \"25\",\r\n    retirementAge: \"67\",\r\n    inputTab: true,\r\n    relationshipStatus: \"M\",\r\n    currentSavings: \"20000\",\r\n    annualDeposit: \"20000\",\r\n    interestRate: \"4\",\r\n    yearsAfterRetirement: \"20\",\r\n    desiredRetirementIncome: \"100000\",\r\n    //calc\r\n    futureValueTwo: \"0\",\r\n    onTrack: true,\r\n    annualRetirementIncome: \"0\",\r\n    annualRetIncNum: \"0\", //the non-string version\r\n    yearsData: \"\",\r\n    //chartLabels: getChartLabels,\r\n  });\r\n\r\n  var today = new Date();\r\n  var currentYear = today.getFullYear();\r\n\r\n  const getYearsUntilRetirement = () => {\r\n    const current_age = data.currentAge;\r\n    const retirement_age = data.retirementAge;\r\n    return retirement_age - current_age;\r\n  };\r\n\r\n  const calculate = () => {\r\n    const years_after_retirement = data.yearsAfterRetirement;\r\n    const desired_retirement_income = data.desiredRetirementIncome;\r\n    const { future_value, years_data } = futureValue();\r\n    const annual_retirement_income = future_value / years_after_retirement;\r\n    const on_track =\r\n      annual_retirement_income > desired_retirement_income ? true : false;\r\n\r\n    setData({\r\n      ...data,\r\n      yearsData: years_data,\r\n      futureValueTwo: toAud(future_value),\r\n      annualRetirementIncome: toAud(annual_retirement_income),\r\n      annualRetIncNum: annual_retirement_income,\r\n      onTrack: on_track,\r\n      inputTab: false,\r\n    });\r\n  };\r\n\r\n  // chart stuff\r\n  const labels = getChartLabels();\r\n\r\n  const futureValue = () => {\r\n    const current_age = data.currentAge;\r\n    const retirement_age = data.retirementAge;\r\n    const annual_deposit = data.annualDeposit;\r\n    const interest_rate = data.interestRate;\r\n    const current_savings = data.currentSavings;\r\n    const int = interest_rate / 100;\r\n    const years_data = [];\r\n    const years_until_retirement = Array.from(\r\n      new Array(getYearsUntilRetirement())\r\n    );\r\n    setData({\r\n      ...data,\r\n      yearsData: \"\",\r\n    });\r\n    const future_value = years_until_retirement.reduce((sum) => {\r\n      const last_year_plus_annual_deposit = +sum + +annual_deposit;\r\n      const interest_earned = last_year_plus_annual_deposit * int;\r\n      const new_sum = +last_year_plus_annual_deposit + +interest_earned;\r\n      // const new_sum = parseFloat(\r\n      //   (last_year_plus_annual_deposit + interest_earned).toFixed(2)\r\n      // ); // it was working...\r\n\r\n      years_data.push(new_sum);\r\n      return new_sum;\r\n    }, current_savings);\r\n    return { future_value, years_data };\r\n  };\r\n\r\n  const toAud = (number) => {\r\n    return number.toLocaleString(\"en-AU\", {\r\n      style: \"currency\",\r\n      currency: \"AUD\",\r\n    });\r\n  };\r\n\r\n  function getChartLabels() {\r\n    const years = Array.from(new Array(getYearsUntilRetirement()));\r\n    return years.map((_, i) => i + parseInt(data.currentAge) + 1);\r\n  }\r\n  //end of chart stuff\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {data.inputTab ? (\r\n        <View\r\n          style={{\r\n            padding: 5,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#f57576\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#fff\",\r\n                },\r\n              ]}\r\n            >\r\n              Input\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              setData({\r\n                ...data,\r\n                inputTab: false,\r\n              })\r\n            }\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#f57576\",\r\n                },\r\n              ]}\r\n            >\r\n              Results\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            padding: 5,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              setData({\r\n                ...data,\r\n                inputTab: true,\r\n              })\r\n            }\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#f57576\",\r\n                },\r\n              ]}\r\n            >\r\n              Input\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#f57576\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#fff\",\r\n                },\r\n              ]}\r\n            >\r\n              Results\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      {data.inputTab ? (\r\n        <View>\r\n          <ScrollView>\r\n            <View style={{ flex: 2, paddingLeft: 5, paddingRight: 5 }}>\r\n              <TextInput\r\n                label=\"Age\"\r\n                value={data.currentAge}\r\n                placeholder=\"Enter your current age here\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    currentAge: value,\r\n                  })\r\n                }\r\n              />\r\n              <Slider\r\n                style={{ width: \"95%\", height: 40 }}\r\n                minimumValue={12}\r\n                maximumValue={65}\r\n                value={data.currentAge}\r\n                minimumTrackTintColor=\"#ff9090\"\r\n                maximumTrackTintColor=\"#aeafab\"\r\n                thumbTintColor=\"#bf6976\"\r\n                onSlidingComplete={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    currentAge: Math.round(value),\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Retirement Age\"\r\n                value={data.retirementAge}\r\n                placeholder=\"Desired retirement age\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    retirementAge: value,\r\n                  })\r\n                }\r\n              />\r\n              <Slider\r\n                style={{ width: \"95%\", height: 40 }}\r\n                minimumValue={20}\r\n                maximumValue={85}\r\n                value={data.retirementAge}\r\n                minimumTrackTintColor=\"#ff9090\"\r\n                maximumTrackTintColor=\"#aeafab\"\r\n                thumbTintColor=\"#bf6976\"\r\n                onSlidingComplete={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    retirementAge: Math.round(value),\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Current Savings\"\r\n                value={data.currentSavings}\r\n                placeholder=\"Your current savings\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    currentSavings: value,\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Annual Deposit\"\r\n                value={data.annualDeposit}\r\n                placeholder=\"Yearly savings deposit\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    annualDeposit: value,\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Interest Rate\"\r\n                value={data.interestRate}\r\n                placeholder=\"Savings Interest Rate\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    interestRate: value,\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Years after retirement\"\r\n                value={data.yearsAfterRetirement}\r\n                placeholder=\"Years after retirement\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    yearsAfterRetirement: value,\r\n                  })\r\n                }\r\n              />\r\n              <TextInput\r\n                label=\"Desired Retirement Income\"\r\n                value={data.desiredRetirementIncome}\r\n                placeholder=\"Desired Retirement Income\"\r\n                onChangeText={(value) =>\r\n                  setData({\r\n                    ...data,\r\n                    desiredRetirementIncome: value,\r\n                  })\r\n                }\r\n              />\r\n\r\n              {/* <RadioButton.Group\r\n              onValueChange={(value) =>\r\n                setData({\r\n                  ...data,\r\n                  relationshipStatus: value,\r\n                })\r\n              }\r\n              value={data.relationshipStatus}\r\n            >\r\n              <RadioButton.Item label=\"Single\" value=\"S\" />\r\n              <RadioButton.Item label=\"Married\" value=\"M\" />\r\n            </RadioButton.Group> */}\r\n              {/* end of Input section View             */}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.signIn,\r\n                {\r\n                  borderColor: \"#f57576\",\r\n                  borderWidth: 1,\r\n                  marginTop: 15,\r\n                },\r\n              ]}\r\n              onPress={() => calculate()}\r\n            >\r\n              <LinearGradient\r\n                colors={[\"#f57576\", \"#a23425\"]}\r\n                style={styles.signIn}\r\n              >\r\n                <Text style={[styles.textSign, { color: \"#fff\" }]}>\r\n                  Calculate\r\n                </Text>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.signIn,\r\n                {\r\n                  borderColor: \"#f57576\",\r\n                  borderWidth: 1,\r\n                  marginTop: 15,\r\n                },\r\n              ]}\r\n              onPress={() => navigation.navigate(\"Advanced Scenario\")}\r\n            >\r\n              <LinearGradient\r\n                colors={[\"#f57576\", \"#a23425\"]}\r\n                style={styles.signIn}\r\n              >\r\n                <Text style={[styles.textSign, { color: \"#fff\" }]}>\r\n                  Advanced\r\n                </Text>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n          </ScrollView>\r\n        </View>\r\n      ) : (\r\n        // Results page goes here\r\n\r\n        <View style={styles.chartStyle}>\r\n          <ScrollView horizontal={true} showsHorizontalScrollIndicator={true}>\r\n            <View>\r\n              <LineChart\r\n                data={{\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      data: data.yearsData,\r\n                    },\r\n                  ],\r\n                }}\r\n                //width={Dimensions.get(\"window\").width - 16} // from react-native\r\n                width={600}\r\n                height={350}\r\n                yAxisLabel=\"$\"\r\n                // need this to shorten thousands to \"K\"\r\n                // formatYLabel={(label, index) =>\r\n                //   `${getFormatedLabel(label, index)}`\r\n                // }\r\n                yAxisInterval={50000} // optional, defaults to 1\r\n                hidePointsAtIndex={Array.from({ length: 100 }, (v, k) =>\r\n                  k % 2 === 0 ? k : null\r\n                )}\r\n                chartConfig={{\r\n                  backgroundColor: \"#a23425\",\r\n                  backgroundGradientFrom: \"#ff7878\",\r\n                  backgroundGradientTo: \"#ffa395\",\r\n                  decimalPlaces: 0, // optional, defaults to 2dp\r\n                  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                  labelColor: (opacity = 1) =>\r\n                    `rgba(255, 255, 255, ${opacity})`,\r\n                  style: {\r\n                    borderRadius: 16,\r\n                  },\r\n                  propsForDots: {\r\n                    r: \"4\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#ea4646\",\r\n                  },\r\n                }}\r\n                bezier\r\n                style={{\r\n                  marginVertical: 8,\r\n                  borderRadius: 16,\r\n                  marginLeft: 10,\r\n                }}\r\n                paddingLeft=\"15\"\r\n              />\r\n            </View>\r\n\r\n            {/* <Button\r\n            onPress={() =>\r\n              console.log(\r\n                \"currAge \",\r\n                parseInt(data.currentAge),\r\n                \"retAge \",\r\n                parseInt(data.retirementAge),\r\n                \"rel \",\r\n                data.relationshipStatus,\r\n                \"year\",\r\n                currentYear,\r\n                \"curSav \",\r\n                data.currentSavings,\r\n                \"annDep \",\r\n                data.annualDeposit,\r\n                \"intRate \",\r\n                data.interestRate,\r\n                \"yrsAftRet \",\r\n                data.yearsAfterRetirement,\r\n                \"desRetInc \",\r\n                data.desiredRetirementIncome,\r\n                \"future_value\",\r\n                data.futureValueTwo,\r\n                \"years_data\",\r\n                data.yearsData\r\n              )\r\n            }\r\n            title=\"Console log\"\r\n          /> */}\r\n          </ScrollView>\r\n          <View>\r\n            <Text style={styles.info}>\r\n              Total Retirement Savings: {data.futureValueTwo}\r\n            </Text>\r\n            {data.onTrack ? (\r\n              <Text style={styles.success}>\r\n                Annual Retirement Income: {toAud(data.annualRetirementIncome)}\r\n              </Text>\r\n            ) : (\r\n              <Text style={styles.danger}>\r\n                Annual Retirement Income: {toAud(data.annualRetirementIncome)}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ScenarioScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n  },\r\n  textSign: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  inputResult: {\r\n    width: \"100%\",\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonView: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    flex: 1,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  success: {\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n    color: \"#3c763d\",\r\n    backgroundColor: \"#dff0d8\",\r\n    borderColor: \"#d6e9c6\",\r\n  },\r\n  danger: {\r\n    backgroundColor: \"#ebcccc\",\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  info: {\r\n    backgroundColor: \"#d9edf7\",\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  chartStyle: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n});\r\n","// =============================\r\n// AdvScenarioScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  StyleSheet,\r\n  Dimensions,\r\n  ScrollView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { LineChart, StackedBarChart } from \"react-native-chart-kit\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport { block } from \"react-native-reanimated\";\r\nimport lineChartA from \"../assets/linechart.jpg\";\r\nimport barChartA from \"../assets/barchart.jpg\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nconst AdvScenarioScreen = () => {\r\n  const [data, setData] = React.useState({\r\n    collapseIsOpen: false,\r\n    collapseDetailsIsOpen: true,\r\n    inputTab: true,\r\n    relationshipStatus: \"M\",\r\n    currentSavings: \"20000\",\r\n    annualDeposit: \"20000\",\r\n    interestRate: \"4\",\r\n    yearsAfterRetirement: \"20\",\r\n    desiredRetirementIncome: \"100000\",\r\n    //calc\r\n    futureValueTwo: \"0\",\r\n    onTrack: true,\r\n    annualRetirementIncome: \"0\",\r\n    annualRetIncNum: \"0\", //the non-string version\r\n    yearsData: \"\",\r\n    //your choices\r\n    ageStopSaving: \"45\",\r\n    expensesPostRetirement: \"0\",\r\n    retirementAge: \"67\",\r\n    //your details\r\n    currentAge: \"25\",\r\n    yearlySalary: \"90000\",\r\n    savingsRate: \"57\",\r\n    annualCol: \"30000\",\r\n    lifestyleCreep: \"0\",\r\n    //your super\r\n    superBalance: \"80000\",\r\n    superGrowth: \"5\",\r\n    superWithdrawalRate: \"5\",\r\n    ageExtraToSuper: \"40\",\r\n    percentExtraToSuper: \"0\",\r\n    //PPOR\r\n    pporCurrentValue: \"400000\",\r\n    pporCurrentOwing: \"350000\",\r\n    pporInterestRate: \"3\",\r\n    pporAnnualRepayments: \"25000\",\r\n    //ETF/LIC\r\n    currentETFLICValue: \"40000\",\r\n    safeWithdrawalRate: \"4\",\r\n    paGrowthETFLIC: \"6\",\r\n    //IP\r\n    ipCurrentValue: \"330000\",\r\n    ipCurrentOwing: \"330000\",\r\n    ipInterestRate: \"4\",\r\n    ipAnnualRepayments: \"16500\",\r\n    //Assumptions\r\n    ipYieldPA: \"5\",\r\n    ipExpenses: \"2\",\r\n    propertyGrowth: \"3\",\r\n    //windfalls\r\n    windfall1Year: \"2023\",\r\n    windfall1Amount: \"10000\",\r\n    windfall2Year: \"2027\",\r\n    windfall2Amount: \"0\",\r\n    //other passive income\r\n    passiveIncomeStartYear: \"2020\",\r\n    passiveIncomeEndYear: \"2022\",\r\n    passiveIncomeNetPA: \"1000\",\r\n    //temporary expenses\r\n    tempExpenseStartYear: \"2020\",\r\n    tempExpenseEndYear: \"2025\",\r\n    tempExpenseCostPA: \"12000\",\r\n    //temporary result\r\n    advfutureValueTwo: \"143347.50\",\r\n    advannualRetirementIncome: \"4621480.92\",\r\n  });\r\n\r\n  var today = new Date();\r\n  var currentYear = today.getFullYear();\r\n\r\n  const getYearsUntilRetirement = () => {\r\n    const current_age = data.currentAge;\r\n    const retirement_age = data.retirementAge;\r\n    return retirement_age - current_age;\r\n  };\r\n\r\n  const calculate = () => {\r\n    const years_after_retirement = data.yearsAfterRetirement;\r\n    const desired_retirement_income = data.desiredRetirementIncome;\r\n    const { future_value, years_data } = futureValue();\r\n    const annual_retirement_income = future_value / years_after_retirement;\r\n    const on_track =\r\n      annual_retirement_income > desired_retirement_income ? true : false;\r\n\r\n    setData({\r\n      ...data,\r\n      yearsData: years_data,\r\n      futureValueTwo: toAud(future_value),\r\n      annualRetirementIncome: toAud(annual_retirement_income),\r\n      annualRetIncNum: annual_retirement_income,\r\n      onTrack: on_track,\r\n      inputTab: false,\r\n    });\r\n  };\r\n\r\n  // chart stuff\r\n  const labels = getChartLabels();\r\n\r\n  const futureValue = () => {\r\n    const current_age = data.currentAge;\r\n    const retirement_age = data.retirementAge;\r\n    const annual_deposit = data.annualDeposit;\r\n    const interest_rate = data.interestRate;\r\n    const current_savings = data.currentSavings;\r\n    const int = interest_rate / 100;\r\n    const years_data = [];\r\n    const years_until_retirement = Array.from(\r\n      new Array(getYearsUntilRetirement())\r\n    );\r\n    setData({\r\n      ...data,\r\n      yearsData: \"\",\r\n    });\r\n    const future_value = years_until_retirement.reduce((sum) => {\r\n      const last_year_plus_annual_deposit = +sum + +annual_deposit;\r\n      const interest_earned = last_year_plus_annual_deposit * int;\r\n      const new_sum = +last_year_plus_annual_deposit + +interest_earned;\r\n      // const new_sum = parseFloat(\r\n      //   (last_year_plus_annual_deposit + interest_earned).toFixed(2)\r\n      // ); // it was working...\r\n\r\n      years_data.push(new_sum);\r\n      return new_sum;\r\n    }, current_savings);\r\n    return { future_value, years_data };\r\n  };\r\n\r\n  const toAud = (number) => {\r\n    return number.toLocaleString(\"en-AU\", {\r\n      style: \"currency\",\r\n      currency: \"AUD\",\r\n    });\r\n  };\r\n\r\n  function getChartLabels() {\r\n    const years = Array.from(new Array(getYearsUntilRetirement()));\r\n    return years.map((_, i) => i + parseInt(data.currentAge) + 1);\r\n  }\r\n\r\n  //bar chart\r\n  const bardata = {\r\n    labels: [\r\n      \"2020 (25)\",\r\n      \"2021 (26)\",\r\n      \"2022 (27)\",\r\n      \"2023 (28)\",\r\n      \"2024 (29)\",\r\n      \"2025 (30)\",\r\n      \"2026 (31)\",\r\n      \"2027 (32)\",\r\n      \"2028 (33)\",\r\n      \"2029 (34)\",\r\n      \"2030 (35)\",\r\n      \"2031 (36)\",\r\n      \"2032 (37)\",\r\n      \"2033 (38)\",\r\n      \"2034 (39)\",\r\n      \"2035 (40)\",\r\n      \"2036 (41)\",\r\n      \"2037 (42)\",\r\n      \"2038 (43)\",\r\n      \"2039 (44)\",\r\n      \"2040 (45)\",\r\n      \"2041 (46)\",\r\n      \"2042 (47)\",\r\n      \"2043 (48)\",\r\n      \"2044 (49)\",\r\n      \"2045 (50)\",\r\n      \"2046 (51)\",\r\n      \"2047 (52)\",\r\n      \"2048 (53)\",\r\n      \"2049 (54)\",\r\n    ],\r\n    // legend: [\"L1\", \"L2\", \"L3\"],\r\n    data: [\r\n      [2666, 0],\r\n      [4684, 0],\r\n      [6658, 0],\r\n      [7909, 0],\r\n      [8384, 0],\r\n      [8887, 0],\r\n      [9420, 0],\r\n      [9985, 0],\r\n      [10584, 0],\r\n      [11219, 0],\r\n      [11892, 0],\r\n      [13174, 0],\r\n      [15105, 0],\r\n      [18770, 24231],\r\n      [24310, 24958],\r\n      [27181, 25706],\r\n      [33354, 26478],\r\n      [39987, 27272],\r\n      [47110, 28090],\r\n      [54753, 28933],\r\n      [62950, 29801],\r\n      [71737, 30695],\r\n      [77343, 31616],\r\n      [83324, 32564],\r\n      [89704, 33541],\r\n      [96509, 34547],\r\n      [98439, 35584],\r\n      [100408, 36651],\r\n      [102416, 37751],\r\n      [104464, 38883],\r\n    ],\r\n    barColors: [\"#c90e33\", \"#ffeeba\"],\r\n  };\r\n\r\n  //end of chart stuff\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {data.inputTab ? (\r\n        <View\r\n          style={{\r\n            padding: 5,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#f57576\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#fff\",\r\n                },\r\n              ]}\r\n            >\r\n              Input\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              setData({\r\n                ...data,\r\n                inputTab: false,\r\n              })\r\n            }\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#f57576\",\r\n                },\r\n              ]}\r\n            >\r\n              Results\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            padding: 5,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              setData({\r\n                ...data,\r\n                inputTab: true,\r\n              })\r\n            }\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#fff\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#f57576\",\r\n                },\r\n              ]}\r\n            >\r\n              Input\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.inputResult,\r\n              {\r\n                backgroundColor: \"#f57576\",\r\n                borderColor: \"#f57576\",\r\n                borderWidth: 1,\r\n                padding: 5,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textSign,\r\n                {\r\n                  color: \"#fff\",\r\n                },\r\n              ]}\r\n            >\r\n              Results\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n      {data.inputTab ? (\r\n        <View>\r\n          <ScrollView>\r\n            <View style={{ paddingLeft: 5, paddingRight: 5 }}>\r\n              {data.collapseIsOpen ? (\r\n                <View>\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.collapseButton,\r\n                      {\r\n                        borderColor: \"#f57576\",\r\n                        borderWidth: 1,\r\n                        marginTop: 5,\r\n                      },\r\n                    ]}\r\n                    onPress={() =>\r\n                      setData({\r\n                        ...data,\r\n                        collapseIsOpen: false,\r\n                        collapseDetailsIsOpen: false,\r\n                      })\r\n                    }\r\n                  >\r\n                    <LinearGradient\r\n                      colors={[\"#f57576\", \"#a23425\"]}\r\n                      style={styles.collapseButton}\r\n                    >\r\n                      <Text style={{ color: \"#fff\", fontSize: 10 }}>\r\n                        Collapse all\r\n                      </Text>\r\n                    </LinearGradient>\r\n                  </TouchableOpacity>\r\n\r\n                  {/* <Button\r\n                  onPress={() =>\r\n                    setData({\r\n                      ...data,\r\n                      collapseIsOpen: false,\r\n                      collapseDetailsIsOpen: false,\r\n                    })\r\n                  }\r\n                  title=\"Collapse all\"\r\n                /> */}\r\n                </View>\r\n              ) : (\r\n                <View>\r\n                  <TouchableOpacity\r\n                    style={[\r\n                      styles.collapseButton,\r\n                      {\r\n                        borderColor: \"#f57576\",\r\n                        borderWidth: 1,\r\n                        marginTop: 5,\r\n                      },\r\n                    ]}\r\n                    onPress={() =>\r\n                      setData({\r\n                        ...data,\r\n                        collapseIsOpen: true,\r\n                        collapseDetailsIsOpen: true,\r\n                      })\r\n                    }\r\n                  >\r\n                    <LinearGradient\r\n                      colors={[\"#f57576\", \"#a23425\"]}\r\n                      style={styles.collapseButton}\r\n                    >\r\n                      <Text style={{ color: \"#fff\", fontSize: 10 }}>\r\n                        Expand all\r\n                      </Text>\r\n                    </LinearGradient>\r\n                  </TouchableOpacity>\r\n                  {/* <Button\r\n                  onPress={() =>\r\n                    setData({\r\n                      ...data,\r\n                      collapseIsOpen: true,\r\n                      collapseDetailsIsOpen: true,\r\n                    })\r\n                  }\r\n                  title=\"Expand all\"\r\n                /> */}\r\n                </View>\r\n              )}\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  trigger=\"Your choices ▽\"\r\n                  open={data.collapseDetailsIsOpen}\r\n                >\r\n                  <TextInput\r\n                    label=\"Age stop saving (semi-retire)\"\r\n                    value={data.ageStopSaving}\r\n                    placeholder=\"Age you intend to semi-retire\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ageStopSaving: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <Slider\r\n                    style={{ width: \"95%\", height: 40 }}\r\n                    minimumValue={20}\r\n                    maximumValue={85}\r\n                    value={data.ageStopSaving}\r\n                    minimumTrackTintColor=\"#ff9090\"\r\n                    maximumTrackTintColor=\"#aeafab\"\r\n                    thumbTintColor=\"#bf6976\"\r\n                    onSlidingComplete={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ageStopSaving: Math.round(value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Retirement Age\"\r\n                    value={data.retirementAge}\r\n                    placeholder=\"Desired retirement age\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        retirementAge: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <Slider\r\n                    style={{ width: \"95%\", height: 40 }}\r\n                    minimumValue={20}\r\n                    maximumValue={85}\r\n                    value={data.retirementAge}\r\n                    minimumTrackTintColor=\"#ff9090\"\r\n                    maximumTrackTintColor=\"#aeafab\"\r\n                    thumbTintColor=\"#bf6976\"\r\n                    onSlidingComplete={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        retirementAge: Math.round(value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Expenses change post-retirement\"\r\n                    value={data.expensesPostRetirement}\r\n                    placeholder=\"Projected change in expenses after retirement\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        expensesPostRetirement: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Your details ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"Age\"\r\n                    value={data.currentAge}\r\n                    placeholder=\"Enter your current age here\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        currentAge: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <Slider\r\n                    style={{ width: \"95%\", height: 40 }}\r\n                    minimumValue={12}\r\n                    maximumValue={65}\r\n                    value={data.currentAge}\r\n                    minimumTrackTintColor=\"#ff9090\"\r\n                    maximumTrackTintColor=\"#aeafab\"\r\n                    thumbTintColor=\"#bf6976\"\r\n                    onSlidingComplete={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        currentAge: Math.round(value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Net average yearly salary\"\r\n                    value={data.yearlySalary}\r\n                    placeholder=\"Your net average yearly salary\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        yearlySalary: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Annual Cost of Living (except Investments)\"\r\n                    value={data.annualCol}\r\n                    placeholder=\"Your annual cost of living\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        annualCol: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Lifestyle creep\"\r\n                    value={data.lifestyleCreep}\r\n                    placeholder=\"Post-retirement splurge %\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        lifestyleCreep: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Your Superannuation ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"Current balance\"\r\n                    value={data.superBalance}\r\n                    placeholder=\"Current balance of your superannuation\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        superBalance: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Growth per annum\"\r\n                    value={data.superGrowth}\r\n                    placeholder=\"Superannuation fund expected growth per year\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        superGrowth: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Withdrawal rate\"\r\n                    value={data.superWithdrawalRate}\r\n                    placeholder=\"Withdrawal rate\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        superWithdrawalRate: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Age you started extra contributions\"\r\n                    value={data.ageExtraToSuper}\r\n                    placeholder=\"Age you started putting extra into super\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ageExtraToSuper: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"What % of savings you put into super\"\r\n                    value={data.percentExtraToSuper}\r\n                    placeholder=\"What % of savings you put into super\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        percentExtraToSuper: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Your Principal Place of Residence (PPOR) ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"PPOR Current Value\"\r\n                    value={data.pporCurrentValue}\r\n                    placeholder=\"The current value of your PPOR\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        pporCurrentValue: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"PPOR Mortgage Owing\"\r\n                    value={data.pporCurrentOwing}\r\n                    placeholder=\"How much left to pay off\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        pporCurrentOwing: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"PPOR Interest Rate\"\r\n                    value={data.pporInterestRate}\r\n                    placeholder=\"Interest rate of the mortgage on the PPOR\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        pporInterestRate: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"PPOR Annual Repayments\"\r\n                    value={data.pporAnnualRepayments}\r\n                    placeholder=\"Annual repayment on the mortgage on the PPOR\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        pporAnnualRepayments: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Your Stock Portfolio ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"Current Value of ETF/LIC\"\r\n                    value={data.currentETFLICValue}\r\n                    placeholder=\"Current value of your stock portfolio\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        currentETFLICValue: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Safe withdrawal rate\"\r\n                    value={data.safeWithdrawalRate}\r\n                    placeholder=\"Safe withdrawal rate\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        safeWithdrawalRate: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Growth per year\"\r\n                    value={data.paGrowthETFLIC}\r\n                    placeholder=\"Expected yearly growth of ETF/LIC\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        paGrowthETFLIC: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Your Investment Property/Properties (IP) ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"IP Current Value\"\r\n                    value={data.ipCurrentValue}\r\n                    placeholder=\"Current value of IP/IPs\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipCurrentValue: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"IP Mortgage OWing\"\r\n                    value={data.ipCurrentOwing}\r\n                    placeholder=\"How much left to pay off\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipCurrentOwing: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"IP Interest Rate\"\r\n                    value={data.ipInterestRate}\r\n                    placeholder=\"Interest Rate on IP Mortgage\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipInterestRate: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"IP Annual Repayments\"\r\n                    value={data.ipAnnualRepayments}\r\n                    placeholder=\"Annual repayment on the IP mortgage\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipAnnualRepayments: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible open={data.collapseIsOpen} trigger=\"Assumptions ▽\">\r\n                  <TextInput\r\n                    label=\"IP Yield per annum\"\r\n                    value={data.ipYieldPA}\r\n                    placeholder=\"How much does the IP earn per year\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipYieldPA: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"IP Expenses\"\r\n                    value={data.ipExpenses}\r\n                    placeholder=\"Expenses related to the Investment Property/ies\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        ipExpenses: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Property Growth per annum\"\r\n                    value={data.propertyGrowth}\r\n                    placeholder=\"Forecasted property growth per annum\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        propertyGrowth: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible open={data.collapseIsOpen} trigger=\"Windfall(s) ▽\">\r\n                  <TextInput\r\n                    label=\"Windfall 1 Year\"\r\n                    value={data.windfall1Year}\r\n                    placeholder=\"Year of first windfall\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        windfall1Year: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Windfall 1 Amount\"\r\n                    value={data.windfall1Amount}\r\n                    placeholder=\"Amount of first windfall\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        windfall1Amount: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Windfall 2 Year\"\r\n                    value={data.windfall2Year}\r\n                    placeholder=\"Year of second windfall\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        windfall2Year: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Windfall 2 Amount\"\r\n                    value={data.windfall2Amount}\r\n                    placeholder=\"Amount of second windfall\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        windfall2Amount: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Other Passive Income ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"Passive income year started\"\r\n                    value={data.passiveIncomeStartYear}\r\n                    placeholder=\"What year did you start earning passive income\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        passiveIncomeStartYear: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Passive income year ended\"\r\n                    value={data.passiveIncomeEndYear}\r\n                    placeholder=\"What year did passive income cease\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        passiveIncomeEndYear: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Amount of Passive income per annum (net)\"\r\n                    value={data.passiveIncomeNetPA}\r\n                    placeholder=\"Net yearly income from passive income\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        passiveIncomeNetPA: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n              <View style={{ marginBottom: 10 }}>\r\n                <Collapsible\r\n                  open={data.collapseIsOpen}\r\n                  trigger=\"Temporary higher expenses ▽\"\r\n                >\r\n                  <TextInput\r\n                    label=\"Year temporary expense started\"\r\n                    value={data.tempExpenseStartYear}\r\n                    placeholder=\"What year did/will the temporary expense begin\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        tempExpenseStartYear: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Year temporary expense ended\"\r\n                    value={data.tempExpenseEndYear}\r\n                    placeholder=\"What year will the temporary expense cease\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        tempExpenseEndYear: value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextInput\r\n                    label=\"Average yearly cost of temporary expense\"\r\n                    value={data.tempExpenseCostPA}\r\n                    placeholder=\"Average yearly cost of temporary expense\"\r\n                    onChangeText={(value) =>\r\n                      setData({\r\n                        ...data,\r\n                        tempExpenseCostPA: value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Collapsible>\r\n              </View>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.signIn,\r\n                {\r\n                  borderColor: \"#f57576\",\r\n                  borderWidth: 1,\r\n                  marginTop: 15,\r\n                },\r\n              ]}\r\n              onPress={() => calculate()}\r\n            >\r\n              <LinearGradient\r\n                colors={[\"#f57576\", \"#a23425\"]}\r\n                style={styles.signIn}\r\n              >\r\n                <Text style={[styles.textSign, { color: \"#fff\" }]}>\r\n                  Calculate\r\n                </Text>\r\n              </LinearGradient>\r\n            </TouchableOpacity>\r\n          </ScrollView>\r\n        </View>\r\n      ) : (\r\n        // Results page goes here\r\n\r\n        <View style={styles.chartStyle}>\r\n          <ScrollView horizontal={true} showsHorizontalScrollIndicator={true}>\r\n            <View>\r\n              {/* <LineChart\r\n                withVerticalLabels={false}\r\n                data={{\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      data: data.yearsData,\r\n                    },\r\n                  ],\r\n                }}\r\n                //width={Dimensions.get(\"window\").width - 16} // from react-native\r\n                width={600}\r\n                height={350}\r\n                yAxisLabel=\"$\"\r\n                // need this to shorten thousands to \"K\"\r\n                // formatYLabel={(label, index) =>\r\n                //   `${getFormatedLabel(label, index)}`\r\n                // }\r\n                yAxisInterval={50000} // optional, defaults to 1\r\n                hidePointsAtIndex={Array.from({ length: 100 }, (v, k) =>\r\n                  k % 2 === 0 ? k : null\r\n                )}\r\n                chartConfig={{\r\n                  backgroundColor: \"#a23425\",\r\n                  backgroundGradientFrom: \"#ff7878\",\r\n                  backgroundGradientTo: \"#ffa395\",\r\n                  decimalPlaces: 0, // optional, defaults to 2dp\r\n                  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                  labelColor: (opacity = 1) =>\r\n                    `rgba(255, 255, 255, ${opacity})`,\r\n                  style: {\r\n                    borderRadius: 16,\r\n                  },\r\n                  propsForDots: {\r\n                    r: \"4\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#ea4646\",\r\n                  },\r\n                }}\r\n                bezier\r\n                style={{\r\n                  marginVertical: 8,\r\n                  borderRadius: 16,\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n              <StackedBarChart\r\n                chartConfig={{\r\n                  backgroundColor: \"#a23425\",\r\n                  backgroundGradientFrom: \"#ff7878\",\r\n                  backgroundGradientTo: \"#ffa395\",\r\n                  decimalPlaces: 0, // optional, defaults to 2dp\r\n                  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                  labelColor: (opacity = 1) =>\r\n                    `rgba(255, 255, 255, ${opacity})`,\r\n                  style: {\r\n                    borderRadius: 16,\r\n                  },\r\n                  propsForDots: {\r\n                    r: \"4\",\r\n                    strokeWidth: \"2\",\r\n                    stroke: \"#ea4646\",\r\n                  },\r\n                }}\r\n                width={600}\r\n                height={350}\r\n                style={{\r\n                  marginVertical: 8,\r\n                  borderRadius: 16,\r\n                  marginLeft: 10,\r\n                }}\r\n                data={bardata}\r\n              /> */}\r\n              <Text style={styles.textSign}>Income and Expenses</Text>\r\n              <Image\r\n                style={{ width: 756, height: 513, borderRadius: 50 }}\r\n                source={lineChartA}\r\n              />\r\n              <Text style={styles.textSign}>\r\n                Net worth of Income-producing Assets (plus PPOR)\r\n              </Text>\r\n              <Image\r\n                style={{ width: 757, height: 513, borderRadius: 50 }}\r\n                source={barChartA}\r\n              />\r\n            </View>\r\n\r\n            {/* <Button\r\n            onPress={() =>\r\n              console.log(\r\n                \"currAge \",\r\n                parseInt(data.currentAge),\r\n                \"retAge \",\r\n                parseInt(data.retirementAge),\r\n                \"rel \",\r\n                data.relationshipStatus,\r\n                \"year\",\r\n                currentYear,\r\n                \"curSav \",\r\n                data.currentSavings,\r\n                \"annDep \",\r\n                data.annualDeposit,\r\n                \"intRate \",\r\n                data.interestRate,\r\n                \"yrsAftRet \",\r\n                data.yearsAfterRetirement,\r\n                \"desRetInc \",\r\n                data.desiredRetirementIncome,\r\n                \"future_value\",\r\n                data.futureValueTwo,\r\n                \"years_data\",\r\n                data.yearsData\r\n              )\r\n            }\r\n            title=\"Console log\"\r\n          /> */}\r\n          </ScrollView>\r\n          <View>\r\n            <Text style={styles.info}>\r\n              Total Retirement Savings: {data.advfutureValueTwo}\r\n            </Text>\r\n            {data.onTrack ? (\r\n              <Text style={styles.success}>\r\n                Annual Retirement Income:{\" \"}\r\n                {toAud(data.advannualRetirementIncome)}\r\n              </Text>\r\n            ) : (\r\n              <Text style={styles.danger}>\r\n                Annual Retirement Income:{\" \"}\r\n                {toAud(data.advannualRetirementIncome)}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AdvScenarioScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  signIn: {\r\n    width: \"100%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 50,\r\n  },\r\n  collapseButton: {\r\n    width: \"100%\",\r\n    height: 15,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 20,\r\n  },\r\n  textSign: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  inputResult: {\r\n    width: \"100%\",\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonView: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    flex: 1,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  success: {\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n    color: \"#3c763d\",\r\n    backgroundColor: \"#dff0d8\",\r\n    borderColor: \"#d6e9c6\",\r\n  },\r\n  danger: {\r\n    backgroundColor: \"#ebcccc\",\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  info: {\r\n    backgroundColor: \"#d9edf7\",\r\n    textAlign: \"center\",\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  chartStyle: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n});\r\n","// =============================\r\n// RootStackScreen.js\r\n// =============================\r\nimport React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport SplashScreen from \"./SplashScreen\";\r\nimport SignInScreen from \"./SignInScreen\";\r\nimport SignUpScreen from \"./SignUpScreen\";\r\n\r\nimport HomeScreen from \"./HomeScreen\";\r\nimport SettingsScreen from \"./SettingsScreen\";\r\nimport HelpScreen from \"./HelpScreen\";\r\nimport AboutScreen from \"./AboutScreen\";\r\nimport ContactScreen from \"./ContactScreen\";\r\nimport ScenarioScreen from \"./ScenarioScreen\";\r\nimport AdvScenarioScreen from \"./AdvScenarioScreen\";\r\n\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\nconst RootStack = createStackNavigator();\r\nconst HomeStack = createStackNavigator();\r\nconst SettingsStack = createStackNavigator();\r\nconst HelpStack = createStackNavigator();\r\nconst AboutStack = createStackNavigator();\r\nconst ContactStack = createStackNavigator();\r\nconst ScenarioStack = createStackNavigator();\r\nconst AdvScenarioStack = createStackNavigator();\r\n\r\nconst RootStackScreen = ({ navigation }) => {\r\n  return (\r\n    <RootStack.Navigator headerMode=\"none\">\r\n      <RootStack.Screen name=\"SplashScreen\" component={SplashScreen} />\r\n      <RootStack.Screen name=\"SignInScreen\" component={SignInScreen} />\r\n      <RootStack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\r\n    </RootStack.Navigator>\r\n  );\r\n};\r\n\r\nconst HomeStackScreen = ({ navigation }) => {\r\n  return (\r\n    <HomeStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <HomeStack.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: \"Home\",\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </HomeStack.Navigator>\r\n  );\r\n};\r\n\r\nconst SettingsStackScreen = ({ navigation }) => {\r\n  return (\r\n    <SettingsStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <SettingsStack.Screen\r\n        name=\"Settings\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </SettingsStack.Navigator>\r\n  );\r\n};\r\n\r\nconst HelpStackScreen = ({ navigation }) => {\r\n  return (\r\n    <HelpStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <HelpStack.Screen\r\n        name=\"Help\"\r\n        component={HelpScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </HelpStack.Navigator>\r\n  );\r\n};\r\n\r\nconst AboutStackScreen = ({ navigation }) => {\r\n  return (\r\n    <AboutStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <AboutStack.Screen\r\n        name=\"About\"\r\n        component={AboutScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </AboutStack.Navigator>\r\n  );\r\n};\r\n\r\nconst ContactStackScreen = ({ navigation }) => {\r\n  return (\r\n    <ContactStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <ContactStack.Screen\r\n        name=\"Contact\"\r\n        component={ContactScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </ContactStack.Navigator>\r\n  );\r\n};\r\n\r\nconst ScenarioStackScreen = ({ navigation }) => {\r\n  return (\r\n    <ScenarioStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <ScenarioStack.Screen\r\n        name=\"Scenario\"\r\n        component={ScenarioScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </ScenarioStack.Navigator>\r\n  );\r\n};\r\n\r\nconst AdvScenarioStackScreen = ({ navigation }) => {\r\n  return (\r\n    <AdvScenarioStack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"#f57576\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      }}\r\n    >\r\n      <ScenarioStack.Screen\r\n        name=\"Advanced Scenario\"\r\n        component={AdvScenarioScreen}\r\n        options={{\r\n          headerLeft: () => (\r\n            <Icon.Button\r\n              name=\"ios-menu\"\r\n              size={25}\r\n              backgroundColor=\"#f57576\"\r\n              onPress={() => navigation.openDrawer()}\r\n            ></Icon.Button>\r\n          ),\r\n        }}\r\n      />\r\n    </AdvScenarioStack.Navigator>\r\n  );\r\n};\r\n\r\nexport {\r\n  RootStackScreen,\r\n  HomeStackScreen,\r\n  SettingsStackScreen,\r\n  HelpStackScreen,\r\n  AboutStackScreen,\r\n  ContactStackScreen,\r\n  ScenarioStackScreen,\r\n  AdvScenarioStackScreen,\r\n};\r\n","// =============================\r\n// App.js\r\n// =============================\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\n\r\nimport { DrawerContent } from \"./screens/DrawerContent\";\r\n\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport {\r\n  RootStackScreen,\r\n  HomeStackScreen,\r\n  SettingsStackScreen,\r\n  HelpStackScreen,\r\n  AboutStackScreen,\r\n  ContactStackScreen,\r\n  ScenarioStackScreen,\r\n  AdvScenarioStackScreen,\r\n} from \"./screens/RootStackScreen\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nimport { AuthContext } from \"./components/context\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n// import Users from \"./model/users\";\r\n\r\n// import RootStackScreen from \"./screens/RootStackScreen\";\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst App = () => {\r\n  // const [isLoading, setIsLoading] = React.useState(true);\r\n  // const [userToken, setUserToken] = React.useState(null);\r\n\r\n  const initialLoginState = {\r\n    isLoading: true,\r\n    userName: null,\r\n    userToken: null,\r\n  };\r\n\r\n  const loginReducer = (prevState, action) => {\r\n    switch (action.type) {\r\n      case \"RETRIEVE_TOKEN\":\r\n        return {\r\n          ...prevState,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case \"LOGIN\":\r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n      case \"LOGOUT\":\r\n        return {\r\n          ...prevState,\r\n          userName: null,\r\n          userToken: null,\r\n          isLoading: false,\r\n        };\r\n      case \"REGISTER\":\r\n        return {\r\n          ...prevState,\r\n          userName: action.id,\r\n          userToken: action.token,\r\n          isLoading: false,\r\n        };\r\n    }\r\n  };\r\n\r\n  const [loginState, dispatch] = React.useReducer(\r\n    loginReducer,\r\n    initialLoginState\r\n  );\r\n\r\n  const authContext = React.useMemo(\r\n    () => ({\r\n      signIn: async (foundUser) => {\r\n        // setUserToken(\"alkjbvlks\");\r\n        // setIsLoading(false);\r\n\r\n        const userToken = String(foundUser[0].userToken);\r\n        const userName = foundUser[0].username;\r\n\r\n        // if (userName == \"user\" && password == \"pass\") {\r\n\r\n        try {\r\n          console.log(\"success\");\r\n          await AsyncStorage.setItem(\"userToken\", userToken);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n        // } else {\r\n        //   console.log(\"fail\");\r\n        // }\r\n        // // console.log(\"user atoken: \", userToken);\r\n        // console.log(\"userName: \", userName, \" || password: \", password);\r\n        dispatch({ type: \"LOGIN\", id: userName, token: userToken });\r\n      },\r\n      signOut: async () => {\r\n        // setUserToken(\"null\");\r\n        // setIsLoading(false);\r\n        //console.log(\"user token: \", userToken);\r\n        try {\r\n          await AsyncStorage.removeItem(\"userToken\");\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n        dispatch({ type: \"LOGOUT\" });\r\n      },\r\n      signUp: () => {\r\n        // setUserToken(\"alkjbvlks\");\r\n        // setIsLoading(false);\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      //setIsLoading(false);\r\n      let userToken;\r\n      userToken = null;\r\n      try {\r\n        userToken = await AsyncStorage.getItem(\"userToken\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      //console.log(\"user token: \", userToken);\r\n      dispatch({ type: \"RETRIEVE_TOKEN\", token: userToken });\r\n    }); // 1000);\r\n  }, []);\r\n\r\n  if (loginState.isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" />\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      <NavigationContainer>\r\n        {loginState.userToken !== null ? (\r\n          <Drawer.Navigator\r\n            drawerContent={(props) => <DrawerContent {...props} />}\r\n          >\r\n            <Drawer.Screen name=\"Home\" component={HomeStackScreen} />\r\n            <Drawer.Screen name=\"Settings\" component={SettingsStackScreen} />\r\n            <Drawer.Screen name=\"Help\" component={HelpStackScreen} />\r\n            <Drawer.Screen name=\"About\" component={AboutStackScreen} />\r\n            <Drawer.Screen name=\"Contact\" component={ContactStackScreen} />\r\n            <Drawer.Screen name=\"Scenario\" component={ScenarioStackScreen} />\r\n            <Drawer.Screen\r\n              name=\"Advanced Scenario\"\r\n              component={AdvScenarioStackScreen}\r\n            />\r\n          </Drawer.Navigator>\r\n        ) : (\r\n          <RootStackScreen />\r\n        )}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","module.exports = __webpack_public_path__ + \"static/media/favicon.fe8d62f5.png\";"],"sourceRoot":""}